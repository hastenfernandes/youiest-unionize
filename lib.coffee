arrowofhrt = undefined
i = undefined
j = undefined
len = undefined
ref = undefined
@Unionize = {}
@s = 'L()'
@user = 'wiber'

@WIFound = (id) ->
  found = undefined
  smite id, 'scouting nemo', eval(s)
  found = WI.find({ _id: id }, limit: 1).count()
  smite id, found, 'finding nemo', eval(s)
  found

@WFound = (id) ->
  found = undefined
  smite id, 'scouting nemo', eval(s)
  found = W.find({ _id: id }, limit: 1).count()
  smite id, found, 'finding nemo', eval(s)
  foun

@smite = do ->
  context = undefined
  context = 's'
  Function::bind.call console.log, console, context

console.warn = ->

arrowofhrt = false

@daff = ->
  d = undefined
  if Meteor.isServer and arrowofhrt
    @time = process.hrtime()
    d = process.hrtime(time)
    d = d[1] + d[0] * 1e9
    d
  else
    (new Date).getTime()

@dif = []
@consoling = true

@t = ->
  d = undefined
  dif.push daff()
  if !(Meteor.isServer and consoling)
    console.timeEnd 'elapsed'
    console.time 'elapsed'
  console.log d = dif.slice(-1)[0] - (dif[0])
  d

Meteor.methods 't': ->
  L()

@L = ->
  caller_line = undefined
  clean = undefined
  end = undefined
  err = undefined
  getErrorObject = undefined
  index = undefined
  pathChars = undefined
  r = undefined
  start = undefined
  t()
  if Meteor.isClient
    ''
  else

    getErrorObject = ->
      `var err`
      err = undefined
      try
        throw Error('')
      catch _error
        err = _error
        return err
      return

    err = getErrorObject()
    caller_line = err.stack.split('\n')[4]
    index = caller_line.indexOf('at ')
    clean = caller_line.slice(index + 2, caller_line.length)
    pathChars = 38
    start = clean.length - pathChars
    end = start + 32
    r = clean.slice(start, +end + 1 or 9e9) + ' ' + t()
    r

@smiter = do ->
  context = undefined
  context = eval(s)
  Function::bind.call console.log, console, context
ref = '123'
j = 0
len = ref.length
while j < len
  i = ref[j]
  smite eval(s), dif, dif[0] - (dif.slice(-1)[0]), i, 'counting to three t()'
  if Meteor.isServer
    new smiter(i)
  j++
@W = new (Meteor.Collection)('W')
@WI = new (Meteor.Collection)('WI')
@Unionize.W = W
@Unionize.WI = WI
@Unionize.hooks = {}
@Unionize.hooks.outbox =
Unionize.onWUpdateHook = (userId, docs, key) ->
  log 'Unionize.onWInsertHook'
  return

eval 'smiter("lives")'
smite 'smiter live!', eval(s)
# ---
# generated by coffee-script 1.9.2

# ---
# generated by js2coffee 2.0.4